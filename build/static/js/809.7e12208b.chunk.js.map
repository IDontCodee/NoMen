{"version":3,"file":"static/js/809.7e12208b.chunk.js","mappings":"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","sources":["../node_modules/@tomphttp/bare-client/src/snapshot.ts","../node_modules/@tomphttp/bare-client/src/Client.ts","../node_modules/@tomphttp/bare-client/src/encodeProtocol.ts","../node_modules/@tomphttp/bare-client/src/V1.ts","../node_modules/@tomphttp/bare-client/src/md5.ts","../node_modules/@tomphttp/bare-client/src/splitHeaderUtil.ts","../node_modules/@tomphttp/bare-client/src/V2.ts","../node_modules/@tomphttp/bare-client/src/BareClient.ts"],"sourcesContent":["// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\n// These exports are provided to plugins by @rollup/plugin-inject\n\nexport const fetch = globalThis.fetch;\nexport const WebSocket = globalThis.WebSocket;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const XMLHttpRequest = globalThis.XMLHttpRequest;\n","import type {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n} from './BareClient';\n\nexport const statusEmpty = [101, 204, 205, 304];\nexport const statusRedirect = [301, 302, 303, 307, 308];\n\nexport interface BareErrorBody {\n\tcode: string;\n\tid: string;\n\tmessage?: string;\n\tstack?: string;\n}\n\nexport class BareError extends Error {\n\tstatus: number;\n\tbody: BareErrorBody;\n\tconstructor(status: number, body: BareErrorBody) {\n\t\tsuper(body.message || body.code);\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n}\n\nexport interface GenericClient {\n\tconnect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket>;\n\trequest(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse>;\n}\n\nexport default class Client {\n\tprotected base: URL;\n\t/**\n\t *\n\t * @param version Version provided by extension\n\t * @param server Bare Server URL provided by BareClient\n\t */\n\tconstructor(version: number, server: URL) {\n\t\tthis.base = new URL(`./v${version}/`, server);\n\t}\n}\n","const validChars =\n\t\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\nconst reserveChar = '%';\n\nexport function validProtocol(protocol: string): boolean {\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (!validChars.includes(char)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function encodeProtocol(protocol: string): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (validChars.includes(char) && char !== reserveChar) {\n\t\t\tresult += char;\n\t\t} else {\n\t\t\tconst code = char.charCodeAt(0);\n\t\t\tresult += reserveChar + code.toString(16).padStart(2, '0');\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function decodeProtocol(protocol: string): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (char === reserveChar) {\n\t\t\tconst code = parseInt(protocol.slice(i + 1, i + 3), 16);\n\t\t\tconst decoded = String.fromCharCode(code);\n\n\t\t\tresult += decoded;\n\t\t\ti += 2;\n\t\t} else {\n\t\t\tresult += char;\n\t\t}\n\t}\n\n\treturn result;\n}\n","import type {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n\tXBare,\n} from './BareClient.js';\nimport type { GenericClient} from './Client.js';\nimport Client, { BareError, statusEmpty } from './Client.js';\nimport { encodeProtocol } from './encodeProtocol.js';\n\nexport default class ClientV1 extends Client implements GenericClient {\n\tws: URL;\n\thttp: URL;\n\tnewMeta: URL;\n\tgetMeta: URL;\n\tconstructor(server: URL) {\n\t\tsuper(1, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\t\tthis.newMeta = new URL('ws-new-meta', this.base);\n\t\tthis.getMeta = new URL('ws-meta', this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tconst assignMeta = await fetch(this.newMeta, { method: 'GET' });\n\n\t\tif (!assignMeta.ok) {\n\t\t\tthrow new BareError(assignMeta.status, await assignMeta.json());\n\t\t}\n\n\t\tconst id = await assignMeta.text();\n\n\t\tconst socket: WebSocket & Partial<BareWebSocket> = new WebSocket(this.ws, [\n\t\t\t'bare',\n\t\t\tencodeProtocol(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tremote: {\n\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\thost,\n\t\t\t\t\t\tport,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t},\n\t\t\t\t\theaders: requestHeaders,\n\t\t\t\t\tforward_headers: [\n\t\t\t\t\t\t'accept-encoding',\n\t\t\t\t\t\t'accept-language',\n\t\t\t\t\t\t'sec-websocket-extensions',\n\t\t\t\t\t\t'sec-websocket-key',\n\t\t\t\t\t\t'sec-websocket-version',\n\t\t\t\t\t],\n\t\t\t\t\tid,\n\t\t\t\t})\n\t\t\t),\n\t\t]);\n\n\t\tsocket.meta = new Promise<XBare>((resolve, reject) => {\n\t\t\tsocket.addEventListener('open', async () => {\n\t\t\t\tconst outgoing = await fetch(this.getMeta, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-bare-id': id,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\n\t\t\t\tif (!outgoing.ok) {\n\t\t\t\t\treject(new BareError(outgoing.status, await outgoing.json()));\n\t\t\t\t}\n\n\t\t\t\tresolve(await outgoing.json());\n\t\t\t});\n\n\t\t\tsocket.addEventListener('error', reject);\n\t\t});\n\n\t\treturn <BareWebSocket>socket;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(`blob:${location.origin}${path}`);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn <BareResponse>result;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst forwardHeaders = ['accept-encoding', 'accept-language'];\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\t// bare can be an absolute path containing no origin, it becomes relative to the script\n\t\tconst request = new Request(this.http, options);\n\n\t\tthis.writeBareRequest(\n\t\t\trequest,\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tpath,\n\t\t\tport,\n\t\t\tbareHeaders,\n\t\t\tforwardHeaders\n\t\t);\n\n\t\tconst response = await fetch(request);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: readResponse.headers,\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.rawHeaders;\n\t\tresult.rawResponse = response;\n\n\t\treturn <BareResponse>result;\n\t}\n\tprivate async readBareResponse(response: Response) {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst requiredHeaders = [\n\t\t\t'x-bare-status',\n\t\t\t'x-bare-status-text',\n\t\t\t'x-bare-headers',\n\t\t];\n\n\t\tfor (const header of requiredHeaders) {\n\t\t\tif (!response.headers.has(header)) {\n\t\t\t\tthrow new BareError(500, {\n\t\t\t\t\tcode: 'IMPL_MISSING_BARE_HEADER',\n\t\t\t\t\tid: `response.headers.${header}`,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst status = parseInt(response.headers.get('x-bare-status')!);\n\t\tconst statusText = response.headers.get('x-bare-status-text')!;\n\t\tconst rawHeaders = JSON.parse(response.headers.get('x-bare-headers')!);\n\t\tconst headers = new Headers(rawHeaders);\n\n\t\treturn {\n\t\t\tstatus,\n\t\t\tstatusText,\n\t\t\trawHeaders,\n\t\t\theaders,\n\t\t};\n\t}\n\tprivate writeBareRequest(\n\t\trequest: Request,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tpath: string,\n\t\tport: string | number,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[]\n\t) {\n\t\trequest.headers.set('x-bare-protocol', protocol);\n\t\trequest.headers.set('x-bare-host', host);\n\t\trequest.headers.set('x-bare-path', path);\n\t\trequest.headers.set('x-bare-port', port.toString());\n\t\trequest.headers.set('x-bare-headers', JSON.stringify(bareHeaders));\n\t\trequest.headers.set(\n\t\t\t'x-bare-forward-headers',\n\t\t\tJSON.stringify(forwardHeaders)\n\t\t);\n\t}\n}\n","/*\n * JavaScript MD5\n * Adopted from https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param x First integer\n * @param y Second integer\n * @returns Sum\n */\nfunction safeAdd(x: number, y: number): number {\n\tconst lsw = (x & 0xffff) + (y & 0xffff);\n\tconst msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\treturn (msw << 16) | (lsw & 0xffff);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param num 32-bit number\n * @param cnt Rotation count\n * @returns  Rotated number\n */\nfunction bitRotateLeft(num: number, cnt: number): number {\n\treturn (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Basic operation the algorithm uses.\n *\n * @param q q\n * @param a a\n * @param b b\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5cmn(\n\tq: number,\n\ta: number,\n\tb: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ff(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5gg(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5hh(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ii(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param x Array of little-endian words\n * @param len Bit length\n * @returns MD5 Array\n */\nfunction binlMD5(x: number[], len: number): number[] {\n\t/* append padding */\n\tx[len >> 5] |= 0x80 << len % 32;\n\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\tlet a = 1732584193;\n\tlet b = -271733879;\n\tlet c = -1732584194;\n\tlet d = 271733878;\n\n\tfor (let i = 0; i < x.length; i += 16) {\n\t\tconst olda = a;\n\t\tconst oldb = b;\n\t\tconst oldc = c;\n\t\tconst oldd = d;\n\n\t\ta = md5ff(a, b, c, d, x[i], 7, -680876936);\n\t\td = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\tc = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\tb = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\ta = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\td = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\tc = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\tb = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\ta = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\td = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\tc = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\tb = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\ta = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\td = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\tc = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\tb = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\ta = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\td = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\tc = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\tb = md5gg(b, c, d, a, x[i], 20, -373897302);\n\t\ta = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\td = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\tc = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\tb = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\ta = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\td = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\tc = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\tb = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\ta = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\td = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\tc = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\tb = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\ta = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\td = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\tc = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\tb = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\ta = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\td = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\tc = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\tb = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\ta = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\td = md5hh(d, a, b, c, x[i], 11, -358537222);\n\t\tc = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\tb = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\ta = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\td = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\tc = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\tb = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\ta = md5ii(a, b, c, d, x[i], 6, -198630844);\n\t\td = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\tc = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\tb = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\ta = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\td = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\tc = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\tb = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\ta = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\td = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\tc = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\tb = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\ta = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\td = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\tc = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\tb = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\ta = safeAdd(a, olda);\n\t\tb = safeAdd(b, oldb);\n\t\tc = safeAdd(c, oldc);\n\t\td = safeAdd(d, oldd);\n\t}\n\treturn [a, b, c, d];\n}\n\n/**\n * Convert an array of little-endian words to a string\n *\n * @param input MD5 Array\n * @returns MD5 string\n */\nfunction binl2rstr(input: number[]): string {\n\tlet output = '';\n\tconst length32 = input.length * 32;\n\tfor (let i = 0; i < length32; i += 8) {\n\t\toutput += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n\t}\n\treturn output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param input Raw input string\n * @returns Array of little-endian words\n */\nfunction rstr2binl(input: string): number[] {\n\tconst output: number[] = [];\n\tconst outputLen = input.length >> 2;\n\tfor (let i = 0; i < outputLen; i += 1) {\n\t\toutput[i] = 0;\n\t}\n\tconst length8 = input.length * 8;\n\tfor (let i = 0; i < length8; i += 8) {\n\t\toutput[i >> 5]! |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n\t}\n\treturn <number[]>output;\n}\n\n/**\n * Calculate the MD5 of a raw string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rstrMD5(s: string): string {\n\treturn binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\n *\n * @param key HMAC key\n * @param data Raw input string\n * @returns Raw MD5 string\n */\nfunction rstrHMACMD5(key: string, data: string): string {\n\tlet bkey = rstr2binl(key);\n\tconst ipad: number[] = [];\n\tconst opad: number[] = [];\n\tif (bkey.length > 16) {\n\t\tbkey = binlMD5(bkey, key.length * 8);\n\t}\n\tfor (let i = 0; i < 16; i += 1) {\n\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\topad[i] = bkey[i] ^ 0x5c5c5c5c;\n\t}\n\tconst hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\treturn binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Convert a raw string to a hex string\n *\n * @param input Raw input string\n * @returns Hex encoded string\n */\nfunction rstr2hex(input: string): string {\n\tconst hexTab = '0123456789abcdef';\n\tlet output = '';\n\tfor (let i = 0; i < input.length; i += 1) {\n\t\tconst x = input.charCodeAt(i);\n\t\toutput += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n\t}\n\treturn output;\n}\n\n/**\n * Encode a string as UTF-8\n *\n * @param input Input string\n * @returns UTF8 string\n */\nfunction str2rstrUTF8(input: string): string {\n\treturn unescape(encodeURIComponent(input));\n}\n\n/**\n * Encodes input string as raw MD5 string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rawMD5(s: string): string {\n\treturn rstrMD5(str2rstrUTF8(s));\n}\n/**\n * Encodes input string as Hex encoded string\n *\n * @param s Input string\n * @returns Hex encoded string\n */\nfunction hexMD5(s: string): string {\n\treturn rstr2hex(rawMD5(s));\n}\n/**\n * Calculates the raw HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction rawHMACMD5(k: string, d: string): string {\n\treturn rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\n/**\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction hexHMACMD5(k: string, d: string): string {\n\treturn rstr2hex(rawHMACMD5(k, d));\n}\n\n/**\n * Calculates MD5 value for a given string.\n * If a key is provided, calculates the HMAC-MD5 value.\n * Returns a Hex encoded string unless the raw argument is given.\n *\n * @param string Input string\n * @param key HMAC key\n * @param raw Raw output switch\n * @returns MD5 output\n */\nexport default function md5(\n\tstring: string,\n\tkey?: string,\n\traw?: boolean\n): string {\n\tif (!key) {\n\t\tif (!raw) {\n\t\t\treturn hexMD5(string);\n\t\t}\n\t\treturn rawMD5(string);\n\t}\n\tif (!raw) {\n\t\treturn hexHMACMD5(key, string);\n\t}\n\treturn rawHMACMD5(key, string);\n}\n","import { BareError } from './Client';\n\nconst MAX_HEADER_VALUE = 3072;\n\n/**\n *\n * Splits headers according to spec\n * @param headers\n * @returns Split headers\n */\nexport function splitHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tif (headers.has('x-bare-headers')) {\n\t\tconst value = headers.get('x-bare-headers')!;\n\n\t\tif (value.length > MAX_HEADER_VALUE) {\n\t\t\toutput.delete('x-bare-headers');\n\n\t\t\tlet split = 0;\n\n\t\t\tfor (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\n\t\t\t\tconst part = value.slice(i, i + MAX_HEADER_VALUE);\n\n\t\t\t\tconst id = split++;\n\t\t\t\toutput.set(`x-bare-headers-${id}`, `;${part}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output;\n}\n\n/**\n * Joins headers according to spec\n * @param headers\n * @returns Joined headers\n */\nexport function joinHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tconst prefix = 'x-bare-headers';\n\n\tif (headers.has(`${prefix}-0`)) {\n\t\tconst join: string[] = [];\n\n\t\tfor (const [header, value] of headers) {\n\t\t\tif (!header.startsWith(prefix)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!value.startsWith(';')) {\n\t\t\t\tthrow new BareError(400, {\n\t\t\t\t\tcode: 'INVALID_BARE_HEADER',\n\t\t\t\t\tid: `request.headers.${header}`,\n\t\t\t\t\tmessage: `Value didn't begin with semi-colon.`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst id = parseInt(header.slice(prefix.length + 1));\n\n\t\t\tjoin[id] = value.slice(1);\n\n\t\t\toutput.delete(header);\n\t\t}\n\n\t\toutput.set(prefix, join.join(''));\n\t}\n\n\treturn output;\n}\n","import type {\n\tBareBodyInit,\n\tBareCache,\n\tBareHeaders,\n\tBareHTTPProtocol,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocket,\n\tBareWSProtocol,\n\tXBare,\n} from './BareClient';\nimport type { GenericClient } from './Client';\nimport Client, { BareError, statusEmpty } from './Client';\nimport md5 from './md5';\nimport { joinHeaders, splitHeaders } from './splitHeaderUtil';\n\nexport default class ClientV2 extends Client implements GenericClient {\n\tws: URL;\n\thttp: URL;\n\tnewMeta: URL;\n\tgetMeta: URL;\n\tconstructor(server: URL) {\n\t\tsuper(2, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\t\tthis.newMeta = new URL('./ws-new-meta', this.base);\n\t\tthis.getMeta = new URL(`./ws-meta`, this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tconst request = new Request(this.newMeta, {\n\t\t\theaders: this.createBareHeaders(\n\t\t\t\tprotocol,\n\t\t\t\thost,\n\t\t\t\tpath,\n\t\t\t\tport,\n\t\t\t\trequestHeaders\n\t\t\t),\n\t\t});\n\n\t\tconst assign_meta = await fetch(request);\n\n\t\tif (!assign_meta.ok) {\n\t\t\tthrow new BareError(assign_meta.status, await assign_meta.json());\n\t\t}\n\n\t\tconst id = await assign_meta.text();\n\n\t\tconst socket: WebSocket & Partial<BareWebSocket> = new WebSocket(this.ws, [\n\t\t\tid,\n\t\t]);\n\n\t\tsocket.meta = new Promise<XBare>((resolve, reject) => {\n\t\t\tsocket.addEventListener('open', async () => {\n\t\t\t\tconst outgoing = await fetch(this.getMeta, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-bare-id': id,\n\t\t\t\t\t},\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t});\n\n\t\t\t\tresolve(await await this.readBareResponse(outgoing));\n\t\t\t});\n\n\t\t\tsocket.addEventListener('error', reject);\n\t\t});\n\n\t\treturn <BareWebSocket>socket;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(`blob:${location.origin}${path}`);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn <BareResponse>result;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (cache !== 'only-if-cached') {\n\t\t\toptions.cache = <RequestCache>cache;\n\t\t}\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\toptions.headers = this.createBareHeaders(\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tpath,\n\t\t\tport,\n\t\t\tbareHeaders\n\t\t);\n\n\t\tconst request = new Request(\n\t\t\tthis.http + '?cache=' + md5(`${protocol}${host}${port}${path}`),\n\t\t\toptions\n\t\t);\n\n\t\tconst response = await fetch(request);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status!) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status!,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: readResponse.headers!,\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.rawHeaders;\n\t\tresult.rawResponse = response;\n\n\t\treturn <BareResponse>result;\n\t}\n\tprivate async readBareResponse(response: Response): Promise<XBare> {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst responseHeaders = joinHeaders(response.headers);\n\n\t\tconst result: XBare = {};\n\n\t\tif (responseHeaders.has('x-bare-status')) {\n\t\t\tresult.status = parseInt(responseHeaders.get('x-bare-status')!);\n\t\t}\n\n\t\tif (responseHeaders.has('x-bare-status-text')) {\n\t\t\tresult.statusText = responseHeaders.get('x-bare-status-text')!;\n\t\t}\n\n\t\tif (responseHeaders.has('x-bare-headers')) {\n\t\t\tresult.rawHeaders = JSON.parse(responseHeaders.get('x-bare-headers')!);\n\t\t\tresult.headers = new Headers(<HeadersInit>result.rawHeaders);\n\t\t}\n\n\t\treturn result;\n\t}\n\tcreateBareHeaders(\n\t\tprotocol: BareWSProtocol | BareHTTPProtocol,\n\t\thost: string,\n\t\tpath: string,\n\t\tport: number | string,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[] = [],\n\t\tpassHeaders: string[] = [],\n\t\tpassStatus: number[] = []\n\t) {\n\t\tconst headers = new Headers();\n\n\t\theaders.set('x-bare-protocol', protocol);\n\t\theaders.set('x-bare-host', host);\n\t\theaders.set('x-bare-path', path);\n\t\theaders.set('x-bare-port', port.toString());\n\t\theaders.set('x-bare-headers', JSON.stringify(bareHeaders));\n\n\t\tfor (const header of forwardHeaders) {\n\t\t\theaders.append('x-bare-forward-headers', header);\n\t\t}\n\n\t\tfor (const header of passHeaders) {\n\t\t\theaders.append('x-bare-pass-headers', header);\n\t\t}\n\n\t\tfor (const status of passStatus) {\n\t\t\theaders.append('x-bare-pass-status', status.toString());\n\t\t}\n\n\t\tsplitHeaders(headers);\n\n\t\treturn headers;\n\t}\n}\n","import type { GenericClient } from './Client';\nimport { statusRedirect } from './Client';\nimport ClientV1 from './V1';\nimport ClientV2 from './V2';\nimport { validProtocol } from './encodeProtocol';\n\n// Implements the protocol for requesting bare data from a server\n// See ../Server/Send.mjs\n\nexport * from './Client';\n\nconst clientCtors: [string, { new (server: URL): GenericClient }][] = [\n\t['v2', ClientV2],\n\t['v1', ClientV1],\n];\n\nexport type BareMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'UPDATE'\n\t| string;\n\nexport type BareCache =\n\t| 'default'\n\t| 'no-store'\n\t| 'reload'\n\t| 'no-cache'\n\t| 'force-cache'\n\t| 'only-if-cached'\n\t| string;\n\nexport interface XBare {\n\tstatus?: number;\n\tstatusText?: string;\n\theaders?: Headers;\n\trawHeaders?: BareHeaders;\n}\n\nexport type BareHTTPProtocol = 'blob:' | 'http:' | 'https:' | string;\nexport type BareWSProtocol = 'ws:' | 'wss:' | string;\n\nexport type urlLike = URL | string;\n\nexport const maxRedirects = 20;\n\nexport type BareHeaders = { [key: string]: string | string[] };\n\n/**\n * WebSocket with an additional property.\n */\nexport type BareWebSocket = WebSocket & { meta: Promise<XBare> };\n\n/**\n * A Response with additional properties.\n */\nexport type BareResponse = Response & {\n\trawResponse: Response;\n\trawHeaders: BareHeaders;\n};\n\n/**\n * A BareResponse with additional properties.\n */\nexport type BareResponseFetch = BareResponse & { finalURL: string };\nexport type BareBodyInit =\n\t| Blob\n\t| BufferSource\n\t| FormData\n\t| URLSearchParams\n\t| ReadableStream\n\t| undefined\n\t| null;\n\nexport type BareFetchInit = {\n\tmethod?: BareMethod;\n\theaders?: Headers | BareHeaders;\n\tbody?: BareBodyInit;\n\tcache?: BareCache;\n\tredirect?: 'follow' | 'manual' | 'error' | string;\n\tsignal?: AbortSignal;\n};\n\nexport type BareMaintainer = {\n\temail?: string;\n\twebsite?: string;\n};\n\nexport type BareProject = {\n\tname?: string;\n\tdescription?: string;\n\temail?: string;\n\twebsite?: string;\n\trepository?: string;\n\tversion?: string;\n};\n\nexport type BareLanguage =\n\t| 'NodeJS'\n\t| 'ServiceWorker'\n\t| 'Deno'\n\t| 'Java'\n\t| 'PHP'\n\t| 'Rust'\n\t| 'C'\n\t| 'C++'\n\t| 'C#'\n\t| 'Ruby'\n\t| 'Go'\n\t| 'Crystal'\n\t| 'Shell'\n\t| string;\n\nexport type BareManifest = {\n\tmaintainer?: BareMaintainer;\n\tproject?: BareProject;\n\tversions: string[];\n\tlanguage: BareLanguage;\n\tmemoryUsage?: number;\n};\n\nasync function fetchManifest(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareManifest> {\n\tconst outgoing = await fetch(server, { signal });\n\n\tif (!outgoing.ok) {\n\t\tthrow new Error(\n\t\t\t`Unable to fetch Bare meta: ${outgoing.status} ${await outgoing.text()}`\n\t\t);\n\t}\n\n\treturn await outgoing.json();\n}\n\nexport default class BareClient {\n\t/**\n\t * @depricated Use .manifest instead.\n\t */\n\tget data(): BareClient['manfiest'] {\n\t\treturn this.manfiest;\n\t}\n\tmanfiest?: BareManifest;\n\tprivate client?: GenericClient;\n\tprivate server: URL;\n\tprivate working?: Promise<void>;\n\tprivate onDemand: boolean;\n\tprivate onDemandSignal?: AbortSignal;\n\t/**\n\t * Lazily create a BareClient. Calls to fetch and connect will request the manifest once on-demand.\n\t * @param server A full URL to the bare server.\n\t * @param signal An abort signal for fetching the manifest on demand.\n\t */\n\tconstructor(server: string | URL, signal?: AbortSignal);\n\t/**\n\t * Immediately create a BareClient.\n\t * @param server A full URL to the bare server.\n\t * @param manfiest A Bare server manifest.\n\t */\n\tconstructor(server: string | URL, manfiest: BareManifest);\n\tconstructor(server: string | URL, _?: BareManifest | AbortSignal) {\n\t\tthis.server = new URL(server);\n\n\t\tif (!_ || _ instanceof AbortSignal) {\n\t\t\tthis.onDemand = true;\n\t\t\tthis.onDemandSignal = _;\n\t\t} else {\n\t\t\tthis.onDemand = false;\n\t\t\tthis.manfiest = _;\n\t\t\tthis.getClient();\n\t\t}\n\t}\n\tprivate demand() {\n\t\tif (!this.onDemand) return;\n\n\t\tif (!this.working)\n\t\t\tthis.working = fetchManifest(this.server, this.onDemandSignal).then(\n\t\t\t\t(manfiest) => {\n\t\t\t\t\tthis.manfiest = manfiest;\n\t\t\t\t\tthis.getClient();\n\t\t\t\t}\n\t\t\t);\n\n\t\treturn this.working;\n\t}\n\tprivate getClient() {\n\t\t// newest-oldest\n\t\tfor (const [version, ctor] of clientCtors) {\n\t\t\tif (this.data!.versions.includes(version)) {\n\t\t\t\tthis.client = new ctor(this.server);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Unable to find compatible client version.`);\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BareBodyInit,\n\t\tprotocol: BareHTTPProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string,\n\t\tcache: BareCache | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tawait this.demand();\n\n\t\treturn await this.client!.request(\n\t\t\tmethod,\n\t\t\trequestHeaders,\n\t\t\tbody,\n\t\t\tprotocol,\n\t\t\thost,\n\t\t\tport,\n\t\t\tpath,\n\t\t\tcache,\n\t\t\tsignal\n\t\t);\n\t}\n\tasync connect(\n\t\trequestHeaders: BareHeaders,\n\t\tprotocol: BareWSProtocol,\n\t\thost: string,\n\t\tport: string | number,\n\t\tpath: string\n\t): Promise<BareWebSocket> {\n\t\tawait this.demand();\n\n\t\treturn this.client!.connect(requestHeaders, protocol, host, port, path);\n\t}\n\t/**\n\t *\n\t * @param url\n\t * @param headers\n\t * @param protocols\n\t * @returns\n\t */\n\tcreateWebSocket(\n\t\turl: urlLike,\n\t\theaders: BareHeaders | Headers = {},\n\t\tprotocols: string | string[] = []\n\t): Promise<BareWebSocket> {\n\t\tconst requestHeaders: BareHeaders =\n\t\t\theaders instanceof Headers ? Object.fromEntries(headers) : headers;\n\n\t\turl = new URL(url);\n\n\t\t// user is expected to specify user-agent and origin\n\t\t// both are in spec\n\n\t\trequestHeaders['Host'] = url.host;\n\t\t// requestHeaders['Origin'] = origin;\n\t\trequestHeaders['Pragma'] = 'no-cache';\n\t\trequestHeaders['Cache-Control'] = 'no-cache';\n\t\trequestHeaders['Upgrade'] = 'websocket';\n\t\t// requestHeaders['User-Agent'] = navigator.userAgent;\n\t\trequestHeaders['Connection'] = 'Upgrade';\n\n\t\tif (typeof protocols === 'string') {\n\t\t\tprotocols = [protocols];\n\t\t}\n\n\t\tfor (const proto of protocols) {\n\t\t\tif (!validProtocol(proto)) {\n\t\t\t\tthrow new DOMException(\n\t\t\t\t\t`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (protocols.length)\n\t\t\trequestHeaders['Sec-Websocket-Protocol'] = protocols.join(', ');\n\n\t\treturn this.connect(\n\t\t\trequestHeaders,\n\t\t\turl.protocol,\n\t\t\turl.hostname,\n\t\t\turl.port,\n\t\t\turl.pathname + url.search\n\t\t);\n\t}\n\tasync fetch(\n\t\turl: urlLike | Request,\n\t\tinit: BareFetchInit = {}\n\t): Promise<BareResponseFetch> {\n\t\tif (url instanceof Request) {\n\t\t\t// behave similar to the browser when fetch is called with (Request, Init)\n\t\t\tif (init) {\n\t\t\t\turl = new URL(url.url);\n\t\t\t} else {\n\t\t\t\tinit = url;\n\t\t\t\turl = new URL(url.url);\n\t\t\t}\n\t\t} else {\n\t\t\turl = new URL(url);\n\t\t}\n\n\t\tlet method: BareMethod;\n\n\t\tif (typeof init.method === 'string') {\n\t\t\tmethod = init.method;\n\t\t} else {\n\t\t\tmethod = 'GET';\n\t\t}\n\n\t\tlet body: BareBodyInit;\n\n\t\tif (init.body !== undefined && init.body !== null) {\n\t\t\tbody = init.body;\n\t\t}\n\n\t\tlet headers: BareHeaders;\n\n\t\tif (typeof init.headers === 'object' && init.headers !== null) {\n\t\t\tif (init.headers instanceof Headers) {\n\t\t\t\theaders = Object.fromEntries(init.headers);\n\t\t\t} else {\n\t\t\t\theaders = init.headers;\n\t\t\t}\n\t\t} else {\n\t\t\theaders = {};\n\t\t}\n\n\t\tlet cache: BareCache;\n\n\t\tif (typeof init.cache === 'string') {\n\t\t\tcache = init.cache;\n\t\t} else {\n\t\t\tcache = 'default';\n\t\t}\n\n\t\tlet signal: AbortSignal | undefined;\n\n\t\tif (init.signal instanceof AbortSignal) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\tfor (let i = 0; ; i++) {\n\t\t\tlet port;\n\n\t\t\tif (url.port === '') {\n\t\t\t\tif (url.protocol === 'https:') {\n\t\t\t\t\tport = '443';\n\t\t\t\t} else {\n\t\t\t\t\tport = '80';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tport = url.port;\n\t\t\t}\n\n\t\t\theaders.host = url.host;\n\n\t\t\tconst response: BareResponse & Partial<BareResponseFetch> =\n\t\t\t\tawait this.request(\n\t\t\t\t\tmethod,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t\turl.protocol,\n\t\t\t\t\turl.hostname,\n\t\t\t\t\tport,\n\t\t\t\t\turl.pathname + url.search,\n\t\t\t\t\tcache,\n\t\t\t\t\tsignal\n\t\t\t\t);\n\n\t\t\tresponse.finalURL = url.toString();\n\n\t\t\tif (statusRedirect.includes(response.status)) {\n\t\t\t\tswitch (init.redirect) {\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\tif (maxRedirects > i && response.headers.has('location')) {\n\t\t\t\t\t\t\turl = new URL(response.headers.get('location')!, url);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\treturn <BareResponseFetch>response;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn <BareResponseFetch>response;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n *\n * Facilitates fetching the Bare server and constructing a BareClient.\n * @param server Bare server\n * @param signal Abort signal when fetching the manifest\n */\nexport async function createBareClient(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareClient> {\n\tconst manfiest = await fetchManifest(server, signal);\n\n\treturn new BareClient(server, manfiest);\n}\n"],"names":["fetch","globalThis","WebSocket","Request","Response","statusEmpty","statusRedirect","BareError","status","body","message","code","Error","Client","version","server","this","base","URL","validChars","validProtocol","protocol","i","length","char","includes","encodeProtocol","result","charCodeAt","toString","padStart","ClientV1","ws","http","newMeta","getMeta","requestHeaders","host","port","path","method","assignMeta","ok","json","text","id","socket","JSON","stringify","remote","headers","forward_headers","meta","Promise","resolve","reject","addEventListener","outgoing","cache","signal","startsWith","location","origin","response","rawHeaders","Object","fromEntries","rawResponse","bareHeaders","Headers","header","value","forwardHeaders","options","credentials","undefined","request","writeBareRequest","readBareResponse","readResponse","statusText","has","parseInt","get","parse","set","safeAdd","x","y","lsw","md5cmn","q","a","b","s","t","num","cnt","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","len","olda","oldb","oldc","oldd","binl2rstr","input","output","length32","String","fromCharCode","rstr2binl","outputLen","length8","rstr2hex","hexTab","charAt","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","rstrMD5","rawHMACMD5","k","key","data","bkey","ipad","opad","hash","concat","rstrHMACMD5","md5","string","raw","MAX_HEADER_VALUE","splitHeaders","delete","split","part","slice","joinHeaders","prefix","join","ClientV2","createBareHeaders","assign_meta","responseHeaders","passHeaders","passStatus","append","clientCtors","fetchManifest","BareClient","_","AbortSignal","onDemand","onDemandSignal","manfiest","getClient","working","then","ctor","versions","client","demand","connect","url","protocols","proto","DOMException","hostname","pathname","search","init","finalURL","redirect","TypeError"],"sourceRoot":""}